EBNF Rules for Java While Statement: 
<while_stmt> → WHILE ‘(‘(<arith_expr> | <logic_expr>)’)’
<block> <block> -> <stmt> | ‘{‘ <stmt > {<stmt>} ’}’
RDA for Java WHILE:

public class RDA_WHILE {
    void while_stmt() {
        if (nextToken != WHILE_CODE)
            error();
        else {
            lex();

            if(extToken != COLON)
                error();
            else{
                lex();
            }

            if (nextToken != LEFT_PAREN)
                error();
            else {
                lex();

                if(nextToken != COLON)
                    error();
                else{
                    lex();
                }

                if (nextToken != LEFT_PAREN)
                    error();
                else {
                    arith_expr();
                    if (nextToken != LOG_OR) {
                        error();
                    else{
                        logic_expr();
                        }
                    if(nextToken != RIGHT_PAREN)
                        error();
                    else{
                        lex();
                    }

                    }
                }
            }

        }
    }
}

EBNF Rules for Java If Statement: 
<ifstmt> → if (<boolexpr>) <statement> [else <statement>] 
RDA for Java IF:
void ifstmt() {
    if (nextToken != IF_CODE)
        error();
    else {
        lex();

        if (nextToken != LEFT_PAREN)
            error();
        else {
            boolexpr();

            if (nextToken != RIGHT_PAREN)
                error();
            else {
                statement();
                if (nextToken == ELSE_CODE) {
                    lex();
                    statement();
                }
            }
        }

    }
}

/*================================ifStatement========================================*/
void ifstmt() {
    if (nextToken != IF_CODE)
        error();
    else {
        lex();

        if (nextToken != LEFT_PAREN)
            error();
        else {
            boolexpr();

            if (nextToken != RIGHT_PAREN)
                error();
            else {
                statement();
                if (nextToken == ELSE_CODE) {
                    lex();
                    statement();
                }
            }
        }

    }
}

